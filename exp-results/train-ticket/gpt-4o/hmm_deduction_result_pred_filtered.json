{"verifycode.service.impl.VerifyCodeServiceImpl.getImageCode": ["verifycode.service.impl.VerifyCodeServiceImpl.getImageCode", "verifycode.service.impl.VerifyCodeServiceImpl.verifyCode"], "travelplan.service.TravelPlanServiceImpl.getQuickest": ["travel2.service.TravelServiceImpl.queryByBatch"], "plan.service.RoutePlanServiceImpl.searchQuickestResult": ["travelplan.service.TravelPlanServiceImpl.getQuickest"], "travel.service.TravelServiceImpl.queryByBatch": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh"], "fdse.microservice.service.BasicServiceImpl.queryForTravels": ["travel.service.TravelServiceImpl.queryByBatch", "travel2.service.TravelServiceImpl.queryByBatch"], "fdse.microservice.service.StationServiceImpl.queryForIdBatch": ["travel.service.TravelServiceImpl.queryByBatch", "travel2.service.TravelServiceImpl.queryByBatch"], "train.service.TrainServiceImpl.retrieveByNames": [], "route.service.RouteServiceImpl.getRouteByIds": [], "price.service.PriceServiceImpl.findByRouteIdsAndTrainTypes": ["preserve.service.PreserveServiceImpl.preserve", "travel.service.TravelServiceImpl.queryByBatch", "travel2.service.TravelServiceImpl.queryByBatch", "preserveOther.service.PreserveOtherServiceImpl.preserve"], "seat.service.SeatServiceImpl.getLeftTicketOfInterval": ["fdse.microservice.service.BasicServiceImpl.queryForTravel"], "order.service.OrderServiceImpl.getSoldTickets": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "config.service.ConfigServiceImpl.query": [], "travel2.service.TravelServiceImpl.queryByBatch": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "other.service.OrderOtherServiceImpl.getSoldTickets": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh"], "travel.service.TravelServiceImpl.getRouteByTripId": ["contacts.service.ContactsServiceImpl.findContactsByAccountId", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders"], "route.service.RouteServiceImpl.getRouteById": ["fdse.microservice.service.BasicServiceImpl.queryForTravel", "rebook.service.RebookServiceImpl.updateOrder"], "train.service.TrainServiceImpl.retrieveByName": ["fdse.microservice.service.BasicServiceImpl.queryForTravel", "rebook.service.RebookServiceImpl.updateOrder"], "auth.service.impl.TokenServiceImpl.getToken": ["verifycode.service.impl.VerifyCodeServiceImpl.getImageCode"], "verifycode.service.impl.VerifyCodeServiceImpl.verifyCode": ["auth.service.impl.TokenServiceImpl.getToken", "verifycode.service.impl.VerifyCodeServiceImpl.getImageCode"], "travel2.service.TravelServiceImpl.getRouteByTripId": ["foodsearch.service.FoodServiceImpl.getAllFood", "fdse.microservice.service.BasicServiceImpl.queryForTravel"], "travelplan.service.TravelPlanServiceImpl.getCheapest": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "travel2.service.TravelServiceImpl.queryByBatch"], "plan.service.RoutePlanServiceImpl.searchCheapestResult": ["travelplan.service.TravelPlanServiceImpl.getCheapest"], "consign.service.ConsignServiceImpl.queryByAccountId": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "contacts.service.ContactsServiceImpl.findContactsByAccountId"], "order.service.OrderServiceImpl.queryOrdersForRefresh": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.getOrderById"], "order.service.OrderServiceImpl.queryOrders": ["order.service.OrderServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders"], "other.service.OrderOtherServiceImpl.queryOrdersForRefresh": ["order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders"], "other.service.OrderOtherServiceImpl.queryOrders": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders"], "execute.serivce.ExecuteServiceImpl.ticketCollect": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "order.service.OrderServiceImpl.getOrderById": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "other.service.OrderOtherServiceImpl.getOrderById": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders"], "other.service.OrderOtherServiceImpl.modifyOrder": ["order.service.OrderServiceImpl.getOrderById", "other.service.OrderOtherServiceImpl.getOrderById", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders"], "order.service.OrderServiceImpl.modifyOrder": ["order.service.OrderServiceImpl.getOrderById", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.getOrderById"], "execute.serivce.ExecuteServiceImpl.ticketExecute": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "travelplan.service.TravelPlanServiceImpl.getMinStation": ["other.service.OrderOtherServiceImpl.queryOrders"], "plan.service.RoutePlanServiceImpl.searchMinStopStations": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "route.service.RouteServiceImpl.getRouteByStartAndEnd": ["security.service.SecurityServiceImpl.check"], "travel.service.TravelServiceImpl.getTripByRoute": ["security.service.SecurityServiceImpl.check"], "travel2.service.TravelServiceImpl.getTripByRoute": [], "travel.service.TravelServiceImpl.getTripAllDetailInfo": ["other.service.OrderOtherServiceImpl.queryOrders"], "fdse.microservice.service.BasicServiceImpl.queryForTravel": ["travel.service.TravelServiceImpl.getTripAllDetailInfo", "travel2.service.TravelServiceImpl.getTripAllDetailInfo"], "fdse.microservice.service.StationServiceImpl.queryForId": ["fdse.microservice.service.BasicServiceImpl.queryForTravel"], "price.service.PriceServiceImpl.findByRouteIdAndTrainType": ["fdse.microservice.service.BasicServiceImpl.queryForTravel"], "foodsearch.service.FoodServiceImpl.getAllFood": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders"], "assurance.service.AssuranceServiceImpl.getAllAssuranceTypes": [], "contacts.service.ContactsServiceImpl.findContactsByAccountId": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "trainFood.service.TrainFoodServiceImpl.listTrainFoodByTripId": ["foodsearch.service.FoodServiceImpl.getAllFood"], "preserveOther.service.PreserveOtherServiceImpl.preserve": ["contacts.service.ContactsServiceImpl.findContactsByAccountId", "seat.service.SeatServiceImpl.distributeSeat", "consign.service.ConsignServiceImpl.insertConsignRecord", "foodsearch.service.FoodServiceImpl.createFoodOrder", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders", "consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion", "user.service.impl.UserServiceImpl.findByUserId"], "security.service.SecurityServiceImpl.check": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "order.service.OrderServiceImpl.checkSecurityAboutOrder": ["security.service.SecurityServiceImpl.check", "contacts.service.ContactsServiceImpl.findContactsByAccountId", "order.service.OrderServiceImpl.queryOrders"], "other.service.OrderOtherServiceImpl.checkSecurityAboutOrder": ["security.service.SecurityServiceImpl.check"], "contacts.service.ContactsServiceImpl.findContactsById": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "travel2.service.TravelServiceImpl.getTripAllDetailInfo": ["order.service.OrderServiceImpl.getOrderById", "order.service.OrderServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.getOrderById"], "seat.service.SeatServiceImpl.distributeSeat": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders"], "other.service.OrderOtherServiceImpl.create": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "foodsearch.service.FoodServiceImpl.createFoodOrder": ["preserve.service.PreserveServiceImpl.preserve", "order.service.OrderServiceImpl.create"], "consign.service.ConsignServiceImpl.insertConsignRecord": ["contacts.service.ContactsServiceImpl.findContactsByAccountId", "preserve.service.PreserveServiceImpl.preserve"], "consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion": ["consign.service.ConsignServiceImpl.insertConsignRecord", "consign.service.ConsignServiceImpl.queryByAccountId"], "user.service.impl.UserServiceImpl.findByUserId": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "assurance.service.AssuranceServiceImpl.create": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.create", "order.service.OrderServiceImpl.queryOrders"], "food.service.StationFoodServiceImpl.getFoodStoresByStationNames": ["foodsearch.service.FoodServiceImpl.getAllFood"], "preserve.service.PreserveServiceImpl.preserve": ["contacts.service.ContactsServiceImpl.findContactsByAccountId", "seat.service.SeatServiceImpl.distributeSeat", "consign.service.ConsignServiceImpl.insertConsignRecord", "foodsearch.service.FoodServiceImpl.createFoodOrder"], "order.service.OrderServiceImpl.create": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "consign.service.ConsignServiceImpl.queryByOrderId": ["order.service.OrderServiceImpl.getOrderById", "other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh"], "consign.service.ConsignServiceImpl.updateConsignRecord": ["order.service.OrderServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.getOrderById", "contacts.service.ContactsServiceImpl.findContactsByAccountId"], "inside_payment.service.InsidePaymentServiceImpl.pay": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "com.trainticket.service.PaymentServiceImpl.pay": ["order.service.OrderServiceImpl.getOrderById", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "user.service.impl.UserServiceImpl.findByUserId"], "cancel.service.CancelServiceImpl.calculateRefund": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.getOrderById"], "cancel.service.CancelServiceImpl.cancelOrder": ["order.service.OrderServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.getOrderById"], "order.service.OrderServiceImpl.saveChanges": ["order.service.OrderServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.getOrderById"], "inside_payment.service.InsidePaymentServiceImpl.drawBack": ["user.service.impl.UserServiceImpl.findByUserId"], "rebook.service.RebookServiceImpl.rebook": ["other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrdersForRefresh", "other.service.OrderOtherServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrders"], "inside_payment.service.InsidePaymentServiceImpl.addMoney": [], "rebook.service.RebookServiceImpl.updateOrder": ["contacts.service.ContactsServiceImpl.findContactsByAccountId", "other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "other.service.OrderOtherServiceImpl.saveChanges": ["order.service.OrderServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.getOrderById", "rebook.service.RebookServiceImpl.updateOrder"], "contacts.service.ContactsServiceImpl.create": ["contacts.service.ContactsServiceImpl.findContactsByAccountId"], "rebook.service.RebookServiceImpl.payDifference": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh", "order.service.OrderServiceImpl.queryOrders", "order.service.OrderServiceImpl.queryOrdersForRefresh"], "rebook.service.RebookServiceImpl.payDifferentMoney": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh"], "inside_payment.service.InsidePaymentServiceImpl.payDifference": ["other.service.OrderOtherServiceImpl.queryOrders", "other.service.OrderOtherServiceImpl.queryOrdersForRefresh"]}