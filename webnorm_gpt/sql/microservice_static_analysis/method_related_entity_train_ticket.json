{
    "adminbasic.controller.AdminBasicInfoController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.getAllContacts": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.deleteContacts": {
        "input_parameters": [
            [
                "contactsId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.modifyContacts": {
        "input_parameters": [
            [
                "mci",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Contacts"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.addContacts": {
        "input_parameters": [
            [
                "c",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Contacts"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.getAllStations": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.deleteStation": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.modifyStation": {
        "input_parameters": [
            [
                "s",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Station"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.addStation": {
        "input_parameters": [
            [
                "s",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Station"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.getAllTrains": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.deleteTrain": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.modifyTrain": {
        "input_parameters": [
            [
                "t",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.addTrain": {
        "input_parameters": [
            [
                "t",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.getAllConfigs": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.deleteConfig": {
        "input_parameters": [
            [
                "name",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.modifyConfig": {
        "input_parameters": [
            [
                "c",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Config"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.addConfig": {
        "input_parameters": [
            [
                "c",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Config"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.getAllPrices": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.deletePrice": {
        "input_parameters": [
            [
                "pricesId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminbasic.controller.AdminBasicInfoController.modifyPrice": {
        "input_parameters": [
            [
                "pi",
                "PriceInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "adminbasic.entity.PriceInfo"
        ]
    },
    "adminbasic.controller.AdminBasicInfoController.addPrice": {
        "input_parameters": [
            [
                "pi",
                "PriceInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "adminbasic.entity.PriceInfo"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.deleteContact": {
        "input_parameters": [
            [
                "contactsId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.modifyContact": {
        "input_parameters": [
            [
                "mci",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Contacts"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.addContact": {
        "input_parameters": [
            [
                "c",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Contacts"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.getAllStations": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.addStation": {
        "input_parameters": [
            [
                "s",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Station"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.deleteStation": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.modifyStation": {
        "input_parameters": [
            [
                "s",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Station"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.addTrain": {
        "input_parameters": [
            [
                "t",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain": {
        "input_parameters": [
            [
                "t",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.addConfig": {
        "input_parameters": [
            [
                "c",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Config"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig": {
        "input_parameters": [
            [
                "name",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig": {
        "input_parameters": [
            [
                "c",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Config"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.addPrice": {
        "input_parameters": [
            [
                "pi",
                "PriceInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "adminbasic.entity.PriceInfo"
        ]
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.deletePrice": {
        "input_parameters": [
            [
                "pricesId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice": {
        "input_parameters": [
            [
                "pi",
                "PriceInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "adminbasic.entity.PriceInfo"
        ]
    },
    "adminorder.controller.AdminOrderController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminorder.controller.AdminOrderController.getAllOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminorder.controller.AdminOrderController.addOrder": {
        "input_parameters": [
            [
                "request",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "adminorder.controller.AdminOrderController.updateOrder": {
        "input_parameters": [
            [
                "request",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "adminorder.controller.AdminOrderController.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminorder.service.AdminOrderServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminorder.service.AdminOrderServiceImpl.getAllOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "adminorder.service.AdminOrderServiceImpl.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminorder.service.AdminOrderServiceImpl.updateOrder": {
        "input_parameters": [
            [
                "request",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "adminorder.service.AdminOrderServiceImpl.addOrder": {
        "input_parameters": [
            [
                "request",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "adminroute.controller.AdminRouteController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminroute.controller.AdminRouteController.getAllRoutes": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminroute.controller.AdminRouteController.addRoute": {
        "input_parameters": [
            [
                "request",
                "RouteInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.RouteInfo"
        ]
    },
    "adminroute.controller.AdminRouteController.deleteRoute": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminroute.service.AdminRouteServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminroute.service.AdminRouteServiceImpl.getAllRoutes": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminroute.service.AdminRouteServiceImpl.createAndModifyRoute": {
        "input_parameters": [
            [
                "request",
                "RouteInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RouteInfo",
            "edu.fudan.common.entity.Route"
        ]
    },
    "adminroute.service.AdminRouteServiceImpl.deleteRoute": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminroute.service.AdminRouteServiceImpl.checkStationsExists": {
        "input_parameters": [
            [
                "stationNames",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "admintravel.controller.AdminTravelController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "admintravel.controller.AdminTravelController.getAllTravels": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "admintravel.controller.AdminTravelController.addTravel": {
        "input_parameters": [
            [
                "request",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "admintravel.controller.AdminTravelController.updateTravel": {
        "input_parameters": [
            [
                "request",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "admintravel.controller.AdminTravelController.deleteTravel": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "admintravel.service.AdminTravelServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "admintravel.service.AdminTravelServiceImpl.getAllTravels": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.AdminTrip"
        ]
    },
    "admintravel.service.AdminTravelServiceImpl.addTravel": {
        "input_parameters": [
            [
                "request",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "admintravel.service.AdminTravelServiceImpl.updateTravel": {
        "input_parameters": [
            [
                "request",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "admintravel.service.AdminTravelServiceImpl.deleteTravel": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "admintravel.service.AdminTravelServiceImpl.checkTravelInfo": {
        "input_parameters": [
            [
                "info",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "admintravel.service.AdminTravelServiceImpl.checkStationsExists": {
        "input_parameters": [
            [
                "stationNames",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "admintravel.service.AdminTravelServiceImpl.queryTrainTypeByName": {
        "input_parameters": [
            [
                "trainTypeName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "admintravel.service.AdminTravelServiceImpl.getRouteByRouteId": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Route",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "adminuser.controller.AdminUserController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminuser.controller.AdminUserController.getAllUsers": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminuser.controller.AdminUserController.updateUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminuser.controller.AdminUserController.addUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminuser.controller.AdminUserController.deleteUser": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "adminuser.service.AdminUserServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "adminuser.service.AdminUserServiceImpl.getAllUsers": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.User"
        ]
    },
    "adminuser.service.AdminUserServiceImpl.deleteUser": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminuser.service.AdminUserServiceImpl.updateUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "adminuser.service.AdminUserServiceImpl.addUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.User"
        ]
    },
    "assurance.controller.AssuranceController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "assurance.controller.AssuranceController.getAllAssurances": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.getAllAssuranceType": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.deleteAssurance": {
        "input_parameters": [
            [
                "assuranceId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.deleteAssuranceByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.modifyAssurance": {
        "input_parameters": [
            [
                "assuranceId",
                "String"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "typeIndex",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.createNewAssurance": {
        "input_parameters": [
            [
                "typeIndex",
                "int"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.getAssuranceById": {
        "input_parameters": [
            [
                "assuranceId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.controller.AssuranceController.findAssuranceByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "assurance.service.AssuranceServiceImpl.findAssuranceById": {
        "input_parameters": [
            [
                "id",
                "UUID"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.Assurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.findAssuranceByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "UUID"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.Assurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.create": {
        "input_parameters": [
            [
                "typeIndex",
                "int"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.AssuranceType",
            "assurance.entity.Assurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.deleteById": {
        "input_parameters": [
            [
                "assuranceId",
                "UUID"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.Assurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.deleteByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "UUID"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.Assurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.modify": {
        "input_parameters": [
            [
                "assuranceId",
                "String"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "typeIndex",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.AssuranceType",
            "assurance.entity.Assurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.getAllAssurances": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.Assurance",
            "assurance.entity.PlainAssurance"
        ]
    },
    "assurance.service.AssuranceServiceImpl.getAllAssuranceTypes": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "assurance.entity.AssuranceType",
            "assurance.entity.AssuranceTypeBean"
        ]
    },
    "auth.controller.AuthController.getHello": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "auth.controller.AuthController.createDefaultUser": {
        "input_parameters": [
            [
                "authDto",
                "AuthDto"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "auth.controller.UserController.getHello": {
        "input_parameters": [],
        "return_type": "Object",
        "entity": null
    },
    "auth.controller.UserController.getToken": {
        "input_parameters": [
            [
                "dao",
                "BasicAuthDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "auth.controller.UserController.getAllUser": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "auth.controller.UserController.deleteUserById": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "auth.security.UserDetailsServiceImpl.loadUserByUsername": {
        "input_parameters": [
            [
                "s",
                "String"
            ]
        ],
        "return_type": "UserDetails",
        "entity": null
    },
    "auth.service.impl.TokenServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "auth.service.impl.TokenServiceImpl.getToken": {
        "input_parameters": [
            [
                "dto",
                "BasicAuthDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "auth.entity.User"
        ]
    },
    "auth.service.impl.UserServiceImpl.saveUser": {
        "input_parameters": [
            [
                "user",
                "User"
            ]
        ],
        "return_type": "User",
        "entity": [
            "auth.entity.User"
        ]
    },
    "auth.service.impl.UserServiceImpl.getAllUser": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "auth.entity.User"
        ]
    },
    "auth.service.impl.UserServiceImpl.createDefaultAuthUser": {
        "input_parameters": [
            [
                "dto",
                "AuthDto"
            ]
        ],
        "return_type": "User",
        "entity": [
            "auth.entity.User"
        ]
    },
    "auth.service.impl.UserServiceImpl.deleteByUserId": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "auth.service.impl.UserServiceImpl.checkUserCreateInfo": {
        "input_parameters": [
            [
                "user",
                "User"
            ]
        ],
        "return_type": "void",
        "entity": [
            "auth.entity.User"
        ]
    },
    "fdse.microservice.controller.BasicController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "fdse.microservice.controller.BasicController.queryForTravel": {
        "input_parameters": [
            [
                "info",
                "Travel"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Travel"
        ]
    },
    "fdse.microservice.controller.BasicController.queryForTravels": {
        "input_parameters": [
            [
                "infos",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.controller.BasicController.queryForStationId": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.service.BasicServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "fdse.microservice.service.BasicServiceImpl.queryForTravel": {
        "input_parameters": [
            [
                "info",
                "Travel"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.PriceConfig",
            "edu.fudan.common.entity.Travel"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.queryForTravels": {
        "input_parameters": [
            [
                "infos",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.PriceConfig",
            "edu.fudan.common.entity.Travel"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.queryForStationId": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "fdse.microservice.service.BasicServiceImpl.checkStationsExists": {
        "input_parameters": [
            [
                "stationNames",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Map",
        "entity": null
    },
    "fdse.microservice.service.BasicServiceImpl.checkStationExists": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "fdse.microservice.service.BasicServiceImpl.queryTrainTypeByNames": {
        "input_parameters": [
            [
                "trainTypeNames",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.queryTrainTypeByName": {
        "input_parameters": [
            [
                "trainTypeName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.getRoutesByRouteIds": {
        "input_parameters": [
            [
                "routeIds",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.getRouteByRouteId": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Route",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "trainType",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "PriceConfig",
        "entity": [
            "edu.fudan.common.entity.PriceConfig"
        ]
    },
    "fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes": {
        "input_parameters": [
            [
                "routeIdsTypes",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Map",
        "entity": [
            "edu.fudan.common.entity.PriceConfig"
        ]
    },
    "cancel.controller.CancelController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "cancel.controller.CancelController.calculate": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "cancel.controller.CancelController.cancelTicket": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "loginId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "cancel.service.CancelServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "cancel.service.CancelServiceImpl.cancelOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "loginId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.NotifyInfo",
            "edu.fudan.common.entity.Order",
            "edu.fudan.common.entity.User"
        ]
    },
    "cancel.service.CancelServiceImpl.sendEmail": {
        "input_parameters": [
            [
                "notifyInfo",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "edu.fudan.common.entity.NotifyInfo"
        ]
    },
    "cancel.service.CancelServiceImpl.calculateRefund": {
        "input_parameters": [
            [
                "order",
                "Order"
            ]
        ],
        "return_type": "String",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "cancel.service.CancelServiceImpl.cancelFromOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom": {
        "input_parameters": [
            [
                "oldHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpHeaders",
        "entity": null
    },
    "cancel.service.CancelServiceImpl.cancelFromOtherOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "cancel.service.CancelServiceImpl.drawbackMoney": {
        "input_parameters": [
            [
                "money",
                "String"
            ],
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "cancel.service.CancelServiceImpl.getAccount": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.User"
        ]
    },
    "cancel.service.CancelServiceImpl.getOrderByIdFromOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "config.controller.ConfigController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "config.controller.ConfigController.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "config.controller.ConfigController.createConfig": {
        "input_parameters": [
            [
                "info",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "config.entity.Config"
        ]
    },
    "config.controller.ConfigController.updateConfig": {
        "input_parameters": [
            [
                "info",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "config.entity.Config"
        ]
    },
    "config.controller.ConfigController.deleteConfig": {
        "input_parameters": [
            [
                "configName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "config.controller.ConfigController.retrieve": {
        "input_parameters": [
            [
                "configName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "config.service.ConfigServiceImpl.create": {
        "input_parameters": [
            [
                "info",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "config.entity.Config"
        ]
    },
    "config.service.ConfigServiceImpl.update": {
        "input_parameters": [
            [
                "info",
                "Config"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "config.entity.Config"
        ]
    },
    "config.service.ConfigServiceImpl.query": {
        "input_parameters": [
            [
                "name",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "config.entity.Config"
        ]
    },
    "config.service.ConfigServiceImpl.delete": {
        "input_parameters": [
            [
                "name",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "config.entity.Config"
        ]
    },
    "config.service.ConfigServiceImpl.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "config.entity.Config"
        ]
    },
    "consignprice.controller.ConsignPriceController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion": {
        "input_parameters": [
            [
                "weight",
                "String"
            ],
            [
                "isWithinRegion",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "consignprice.controller.ConsignPriceController.getPriceInfo": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "consignprice.controller.ConsignPriceController.getPriceConfig": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "consignprice.controller.ConsignPriceController.modifyPriceConfig": {
        "input_parameters": [
            [
                "priceConfig",
                "ConsignPrice"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "consignprice.entity.ConsignPrice"
        ]
    },
    "consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion": {
        "input_parameters": [
            [
                "weight",
                "double"
            ],
            [
                "isWithinRegion",
                "boolean"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consignprice.entity.ConsignPrice"
        ]
    },
    "consignprice.service.ConsignPriceServiceImpl.queryPriceInformation": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consignprice.entity.ConsignPrice"
        ]
    },
    "consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice": {
        "input_parameters": [
            [
                "config",
                "ConsignPrice"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consignprice.entity.ConsignPrice"
        ]
    },
    "consignprice.service.ConsignPriceServiceImpl.getPriceConfig": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "consign.controller.ConsignController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "consign.controller.ConsignController.insertConsign": {
        "input_parameters": [
            [
                "request",
                "Consign"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "consign.entity.Consign"
        ]
    },
    "consign.controller.ConsignController.updateConsign": {
        "input_parameters": [
            [
                "request",
                "Consign"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "consign.entity.Consign"
        ]
    },
    "consign.controller.ConsignController.findByAccountId": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "consign.controller.ConsignController.findByOrderId": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "consign.controller.ConsignController.findByConsignee": {
        "input_parameters": [
            [
                "consignee",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "consign.service.ConsignServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "consign.service.ConsignServiceImpl.insertConsignRecord": {
        "input_parameters": [
            [
                "consignRequest",
                "Consign"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consign.entity.Consign",
            "consign.entity.ConsignRecord"
        ]
    },
    "consign.service.ConsignServiceImpl.updateConsignRecord": {
        "input_parameters": [
            [
                "consignRequest",
                "Consign"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consign.entity.Consign",
            "consign.entity.ConsignRecord"
        ]
    },
    "consign.service.ConsignServiceImpl.queryByAccountId": {
        "input_parameters": [
            [
                "accountId",
                "UUID"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consign.entity.ConsignRecord"
        ]
    },
    "consign.service.ConsignServiceImpl.queryByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "UUID"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consign.entity.ConsignRecord"
        ]
    },
    "consign.service.ConsignServiceImpl.queryByConsignee": {
        "input_parameters": [
            [
                "consignee",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "consign.entity.ConsignRecord"
        ]
    },
    "contacts.controller.ContactsController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "contacts.controller.ContactsController.getAllContacts": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "contacts.controller.ContactsController.createNewContacts": {
        "input_parameters": [
            [
                "aci",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.controller.ContactsController.createNewContactsAdmin": {
        "input_parameters": [
            [
                "aci",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.controller.ContactsController.deleteContacts": {
        "input_parameters": [
            [
                "contactsId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "contacts.controller.ContactsController.modifyContacts": {
        "input_parameters": [
            [
                "info",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.controller.ContactsController.findContactsByAccountId": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "contacts.controller.ContactsController.getContactsByContactsId": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "contacts.service.ContactsServiceImpl.findContactsById": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.service.ContactsServiceImpl.findContactsByAccountId": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.service.ContactsServiceImpl.createContacts": {
        "input_parameters": [
            [
                "contacts",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.service.ContactsServiceImpl.create": {
        "input_parameters": [
            [
                "addContacts",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.service.ContactsServiceImpl.delete": {
        "input_parameters": [
            [
                "contactsId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.service.ContactsServiceImpl.modify": {
        "input_parameters": [
            [
                "contacts",
                "Contacts"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "contacts.service.ContactsServiceImpl.getAllContacts": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "contacts.entity.Contacts"
        ]
    },
    "execute.controller.ExecuteControlller.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "execute.controller.ExecuteControlller.executeTicket": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "execute.controller.ExecuteControlller.collectTicket": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "execute.serivce.ExecuteServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "execute.serivce.ExecuteServiceImpl.ticketExecute": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "execute.serivce.ExecuteServiceImpl.ticketCollect": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "execute.serivce.ExecuteServiceImpl.executeOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "status",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "execute.serivce.ExecuteServiceImpl.executeOrderOther": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "status",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "food_delivery.controller.FoodDeliveryController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "food_delivery.controller.FoodDeliveryController.createFoodDeliveryOrder": {
        "input_parameters": [
            [
                "fd",
                "FoodDeliveryOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder"
        ]
    },
    "food_delivery.controller.FoodDeliveryController.deleteFoodDeliveryOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food_delivery.controller.FoodDeliveryController.getFoodDeliveryOrderById": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food_delivery.controller.FoodDeliveryController.getAllFoodDeliveryOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food_delivery.controller.FoodDeliveryController.getFoodDeliveryOrderByStoreId": {
        "input_parameters": [
            [
                "storeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food_delivery.controller.FoodDeliveryController.updateTripId": {
        "input_parameters": [
            [
                "tripOrderInfo",
                "TripOrderInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "food_delivery.entity.TripOrderInfo"
        ]
    },
    "food_delivery.controller.FoodDeliveryController.updateSeatNo": {
        "input_parameters": [
            [
                "seatInfo",
                "SeatInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "food_delivery.entity.SeatInfo"
        ]
    },
    "food_delivery.controller.FoodDeliveryController.updateDeliveryTime": {
        "input_parameters": [
            [
                "deliveryInfo",
                "DeliveryInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "food_delivery.entity.DeliveryInfo"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder": {
        "input_parameters": [
            [
                "fd",
                "FoodDeliveryOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder",
            "edu.fudan.common.entity.Food",
            "food_delivery.entity.StationFoodStoreInfo"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.deleteFoodDeliveryOrder": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.getFoodDeliveryOrderById": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.getAllFoodDeliveryOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.getFoodDeliveryOrderByStoreId": {
        "input_parameters": [
            [
                "storeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.updateTripId": {
        "input_parameters": [
            [
                "tripInfo",
                "TripOrderInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder",
            "food_delivery.entity.TripOrderInfo"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.updateSeatNo": {
        "input_parameters": [
            [
                "seatInfo",
                "SeatInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder",
            "food_delivery.entity.SeatInfo"
        ]
    },
    "food_delivery.service.FoodDeliveryServiceImpl.updateDeliveryTime": {
        "input_parameters": [
            [
                "deliveryInfo",
                "DeliveryInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food_delivery.entity.FoodDeliveryOrder",
            "food_delivery.entity.DeliveryInfo"
        ]
    },
    "foodsearch.controller.FoodController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "foodsearch.controller.FoodController.test_send_delivery": {
        "input_parameters": [],
        "return_type": "boolean",
        "entity": [
            "foodsearch.entity.Delivery"
        ]
    },
    "foodsearch.controller.FoodController.findAllFoodOrder": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "foodsearch.controller.FoodController.createFoodOrder": {
        "input_parameters": [
            [
                "addFoodOrder",
                "FoodOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "foodsearch.entity.FoodOrder"
        ]
    },
    "foodsearch.controller.FoodController.createFoodBatches": {
        "input_parameters": [
            [
                "foodOrderList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "foodsearch.controller.FoodController.updateFoodOrder": {
        "input_parameters": [
            [
                "updateFoodOrder",
                "FoodOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "foodsearch.entity.FoodOrder"
        ]
    },
    "foodsearch.controller.FoodController.deleteFoodOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "foodsearch.controller.FoodController.findFoodOrderByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "foodsearch.controller.FoodController.getAllFood": {
        "input_parameters": [
            [
                "date",
                "String"
            ],
            [
                "startStation",
                "String"
            ],
            [
                "endStation",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "foodsearch.service.FoodServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch": {
        "input_parameters": [
            [
                "orders",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "foodsearch.entity.FoodOrder",
            "foodsearch.entity.Delivery"
        ]
    },
    "foodsearch.service.FoodServiceImpl.createFoodOrder": {
        "input_parameters": [
            [
                "addFoodOrder",
                "FoodOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "foodsearch.entity.FoodOrder",
            "foodsearch.entity.Delivery"
        ]
    },
    "foodsearch.service.FoodServiceImpl.deleteFoodOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "foodsearch.entity.FoodOrder"
        ]
    },
    "foodsearch.service.FoodServiceImpl.findAllFoodOrder": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "foodsearch.entity.FoodOrder"
        ]
    },
    "foodsearch.service.FoodServiceImpl.updateFoodOrder": {
        "input_parameters": [
            [
                "updateFoodOrder",
                "FoodOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "foodsearch.entity.FoodOrder"
        ]
    },
    "foodsearch.service.FoodServiceImpl.findByOrderId": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "foodsearch.entity.FoodOrder"
        ]
    },
    "foodsearch.service.FoodServiceImpl.getAllFood": {
        "input_parameters": [
            [
                "date",
                "String"
            ],
            [
                "startStation",
                "String"
            ],
            [
                "endStation",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Food",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.StationFoodStore",
            "foodsearch.entity.AllTripFood"
        ]
    },
    "inside_payment.controller.InsidePaymentController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "inside_payment.controller.InsidePaymentController.pay": {
        "input_parameters": [
            [
                "info",
                "PaymentInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "inside_payment.entity.PaymentInfo"
        ]
    },
    "inside_payment.controller.InsidePaymentController.createAccount": {
        "input_parameters": [
            [
                "info",
                "AccountInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "inside_payment.entity.AccountInfo"
        ]
    },
    "inside_payment.controller.InsidePaymentController.addMoney": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "money",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "inside_payment.controller.InsidePaymentController.queryPayment": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "inside_payment.controller.InsidePaymentController.queryAccount": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "inside_payment.controller.InsidePaymentController.drawBack": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "money",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "inside_payment.controller.InsidePaymentController.payDifference": {
        "input_parameters": [
            [
                "info",
                "PaymentInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "inside_payment.entity.PaymentInfo"
        ]
    },
    "inside_payment.controller.InsidePaymentController.queryAddMoney": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "inside_payment.service.InsidePaymentServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "inside_payment.service.InsidePaymentServiceImpl.pay": {
        "input_parameters": [
            [
                "info",
                "PaymentInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Money",
            "inside_payment.entity.Payment",
            "inside_payment.entity.PaymentInfo",
            "edu.fudan.common.entity.Order"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.createAccount": {
        "input_parameters": [
            [
                "info",
                "AccountInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Money",
            "inside_payment.entity.AccountInfo"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.addMoney": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "money",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Money"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.queryAccount": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": [
            "inside_payment.entity.Money",
            "inside_payment.entity.Payment"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.queryPayment": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Payment"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.drawBack": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "money",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Money"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.payDifference": {
        "input_parameters": [
            [
                "info",
                "PaymentInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Money",
            "inside_payment.entity.Payment",
            "inside_payment.entity.PaymentInfo"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.queryAddMoney": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "inside_payment.entity.Money"
        ]
    },
    "inside_payment.service.InsidePaymentServiceImpl.setOrderStatus": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "inside_payment.service.InsidePaymentServiceImpl.initPayment": {
        "input_parameters": [
            [
                "payment",
                "Payment"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "void",
        "entity": [
            "inside_payment.entity.Payment"
        ]
    },
    "notification.controller.NotificationController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "notification.controller.NotificationController.test_send": {
        "input_parameters": [],
        "return_type": "boolean",
        "entity": null
    },
    "notification.controller.NotificationController.test_send_mail": {
        "input_parameters": [],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo"
        ]
    },
    "notification.controller.NotificationController.preserve_success": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo"
        ]
    },
    "notification.controller.NotificationController.order_create_success": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo"
        ]
    },
    "notification.controller.NotificationController.order_changed_success": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo"
        ]
    },
    "notification.controller.NotificationController.order_cancel_success": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo"
        ]
    },
    "notification.service.NotificationServiceImpl.preserveSuccess": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo",
            "notification.entity.Mail"
        ]
    },
    "notification.service.NotificationServiceImpl.orderCreateSuccess": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo",
            "notification.entity.Mail"
        ]
    },
    "notification.service.NotificationServiceImpl.orderChangedSuccess": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo",
            "notification.entity.Mail"
        ]
    },
    "notification.service.NotificationServiceImpl.orderCancelSuccess": {
        "input_parameters": [
            [
                "info",
                "NotifyInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "notification.entity.NotifyInfo",
            "notification.entity.Mail"
        ]
    },
    "other.controller.OrderOtherController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "other.controller.OrderOtherController.getTicketListByDateAndTripId": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "other.controller.OrderOtherController.createNewOrder": {
        "input_parameters": [
            [
                "createOrder",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.controller.OrderOtherController.addcreateNewOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.controller.OrderOtherController.queryOrders": {
        "input_parameters": [
            [
                "qi",
                "QueryInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "other.entity.QueryInfo"
        ]
    },
    "other.controller.OrderOtherController.queryOrdersForRefresh": {
        "input_parameters": [
            [
                "qi",
                "QueryInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "other.entity.QueryInfo"
        ]
    },
    "other.controller.OrderOtherController.calculateSoldTicket": {
        "input_parameters": [
            [
                "travelDate",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.getOrderPrice": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.payOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.getOrderById": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.modifyOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "status",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.securityInfoCheck": {
        "input_parameters": [
            [
                "checkDate",
                "String"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.saveOrderInfo": {
        "input_parameters": [
            [
                "orderInfo",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.controller.OrderOtherController.updateOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.controller.OrderOtherController.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.controller.OrderOtherController.findAllOrder": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "other.service.OrderOtherServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "other.service.OrderOtherServiceImpl.getSoldTickets": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Ticket",
            "other.entity.Order",
            "edu.fudan.common.entity.LeftTicketInfo",
            "edu.fudan.common.entity.Seat"
        ]
    },
    "other.service.OrderOtherServiceImpl.findOrderById": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.create": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.initOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "void",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.alterOrder": {
        "input_parameters": [
            [
                "oai",
                "OrderAlterInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order",
            "other.entity.OrderAlterInfo"
        ]
    },
    "other.service.OrderOtherServiceImpl.queryOrders": {
        "input_parameters": [
            [
                "qi",
                "QueryInfo"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.QueryInfo",
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.queryOrdersForRefresh": {
        "input_parameters": [
            [
                "qi",
                "QueryInfo"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.QueryInfo",
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.queryForStationId": {
        "input_parameters": [
            [
                "ids",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": null
    },
    "other.service.OrderOtherServiceImpl.saveChanges": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.cancelOrder": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.queryAlreadySoldOrders": {
        "input_parameters": [
            [
                "travelDate",
                "Date"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order",
            "edu.fudan.common.entity.SoldTicket"
        ]
    },
    "other.service.OrderOtherServiceImpl.getAllOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.modifyOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "status",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.getOrderPrice": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.payOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.getOrderById": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.checkSecurityAboutOrder": {
        "input_parameters": [
            [
                "dateFrom",
                "Date"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.OrderSecurity",
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.addNewOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "other.service.OrderOtherServiceImpl.updateOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "other.entity.Order"
        ]
    },
    "order.controller.OrderController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "order.controller.OrderController.getTicketListByDateAndTripId": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "order.controller.OrderController.createNewOrder": {
        "input_parameters": [
            [
                "createOrder",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.controller.OrderController.addcreateNewOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.controller.OrderController.queryOrders": {
        "input_parameters": [
            [
                "qi",
                "OrderInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "order.entity.OrderInfo"
        ]
    },
    "order.controller.OrderController.queryOrdersForRefresh": {
        "input_parameters": [
            [
                "qi",
                "OrderInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "order.entity.OrderInfo"
        ]
    },
    "order.controller.OrderController.calculateSoldTicket": {
        "input_parameters": [
            [
                "travelDate",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.getOrderPrice": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.payOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.getOrderById": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.modifyOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "status",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.securityInfoCheck": {
        "input_parameters": [
            [
                "checkDate",
                "String"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.saveOrderInfo": {
        "input_parameters": [
            [
                "orderInfo",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.controller.OrderController.updateOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.controller.OrderController.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.controller.OrderController.findAllOrder": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "order.service.OrderServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "order.service.OrderServiceImpl.getSoldTickets": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.LeftTicketInfo",
            "order.entity.Order",
            "edu.fudan.common.entity.Seat"
        ]
    },
    "order.service.OrderServiceImpl.findOrderById": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.create": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.alterOrder": {
        "input_parameters": [
            [
                "oai",
                "OrderAlterInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.OrderAlterInfo",
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.queryOrders": {
        "input_parameters": [
            [
                "qi",
                "OrderInfo"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order",
            "order.entity.OrderInfo"
        ]
    },
    "order.service.OrderServiceImpl.queryOrdersForRefresh": {
        "input_parameters": [
            [
                "qi",
                "OrderInfo"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order",
            "order.entity.OrderInfo"
        ]
    },
    "order.service.OrderServiceImpl.queryForStationId": {
        "input_parameters": [
            [
                "ids",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": null
    },
    "order.service.OrderServiceImpl.saveChanges": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.cancelOrder": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.queryAlreadySoldOrders": {
        "input_parameters": [
            [
                "travelDate",
                "Date"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.SoldTicket",
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.getAllOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.modifyOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "status",
                "int"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.getOrderPrice": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.payOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.getOrderById": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.initOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "void",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.checkSecurityAboutOrder": {
        "input_parameters": [
            [
                "dateFrom",
                "Date"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.OrderSecurity",
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.addNewOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "order.service.OrderServiceImpl.updateOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "order.entity.Order"
        ]
    },
    "com.trainticket.controller.PaymentController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "com.trainticket.controller.PaymentController.pay": {
        "input_parameters": [
            [
                "info",
                "Payment"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "com.trainticket.entity.Payment"
        ]
    },
    "com.trainticket.controller.PaymentController.addMoney": {
        "input_parameters": [
            [
                "info",
                "Payment"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "com.trainticket.entity.Payment"
        ]
    },
    "com.trainticket.controller.PaymentController.query": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "com.trainticket.service.PaymentServiceImpl.pay": {
        "input_parameters": [
            [
                "info",
                "Payment"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "com.trainticket.entity.Payment"
        ]
    },
    "com.trainticket.service.PaymentServiceImpl.addMoney": {
        "input_parameters": [
            [
                "info",
                "Payment"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "com.trainticket.entity.Payment",
            "com.trainticket.entity.Money"
        ]
    },
    "com.trainticket.service.PaymentServiceImpl.query": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "com.trainticket.entity.Payment"
        ]
    },
    "com.trainticket.service.PaymentServiceImpl.initPayment": {
        "input_parameters": [
            [
                "payment",
                "Payment"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "void",
        "entity": [
            "com.trainticket.entity.Payment"
        ]
    },
    "preserveOther.controller.PreserveOtherController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "preserveOther.controller.PreserveOtherController.preserve": {
        "input_parameters": [
            [
                "oti",
                "OrderTicketsInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.OrderTicketsInfo"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "preserveOther.service.PreserveOtherServiceImpl.preserve": {
        "input_parameters": [
            [
                "oti",
                "OrderTicketsInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "edu.fudan.common.entity.NotifyInfo",
            "edu.fudan.common.entity.OrderTicketsInfo",
            "edu.fudan.common.entity.Contacts",
            "edu.fudan.common.entity.Travel",
            "edu.fudan.common.entity.Trip",
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.User",
            "edu.fudan.common.entity.Assurance",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.Order",
            "edu.fudan.common.entity.FoodOrder",
            "edu.fudan.common.entity.Consign",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.dipatchSeat": {
        "input_parameters": [
            [
                "date",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "startStationId",
                "String"
            ],
            [
                "endStataionId",
                "String"
            ],
            [
                "seatType",
                "int"
            ],
            [
                "totalNum",
                "int"
            ],
            [
                "stationList",
                "List"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Ticket",
        "entity": [
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.Seat"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.sendEmail": {
        "input_parameters": [
            [
                "notifyInfo",
                "NotifyInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "edu.fudan.common.entity.NotifyInfo"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.getAccount": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "User",
        "entity": [
            "edu.fudan.common.entity.User"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder": {
        "input_parameters": [
            [
                "assuranceType",
                "int"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Assurance"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.queryForStationId": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "preserveOther.service.PreserveOtherServiceImpl.checkSecurity": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation": {
        "input_parameters": [
            [
                "gtdi",
                "TripAllDetailInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.getContactsById": {
        "input_parameters": [
            [
                "contactsId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Contacts"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.createOrder": {
        "input_parameters": [
            [
                "coi",
                "Order"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.createFoodOrder": {
        "input_parameters": [
            [
                "afi",
                "FoodOrder"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.FoodOrder"
        ]
    },
    "preserveOther.service.PreserveOtherServiceImpl.createConsign": {
        "input_parameters": [
            [
                "cr",
                "Consign"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Consign"
        ]
    },
    "preserve.controller.PreserveController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "preserve.controller.PreserveController.preserve": {
        "input_parameters": [
            [
                "oti",
                "OrderTicketsInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.OrderTicketsInfo"
        ]
    },
    "preserve.service.PreserveServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "preserve.service.PreserveServiceImpl.preserve": {
        "input_parameters": [
            [
                "oti",
                "OrderTicketsInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "edu.fudan.common.entity.NotifyInfo",
            "edu.fudan.common.entity.OrderTicketsInfo",
            "edu.fudan.common.entity.Contacts",
            "edu.fudan.common.entity.Travel",
            "edu.fudan.common.entity.Trip",
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.User",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.Order",
            "edu.fudan.common.entity.FoodOrder",
            "edu.fudan.common.entity.Consign",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "preserve.service.PreserveServiceImpl.dipatchSeat": {
        "input_parameters": [
            [
                "date",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "startStation",
                "String"
            ],
            [
                "endStataion",
                "String"
            ],
            [
                "seatType",
                "int"
            ],
            [
                "totalNum",
                "int"
            ],
            [
                "stationList",
                "List"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Ticket",
        "entity": [
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.Seat"
        ]
    },
    "preserve.service.PreserveServiceImpl.sendEmail": {
        "input_parameters": [
            [
                "notifyInfo",
                "NotifyInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "edu.fudan.common.entity.NotifyInfo"
        ]
    },
    "preserve.service.PreserveServiceImpl.getAccount": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "User",
        "entity": [
            "edu.fudan.common.entity.User"
        ]
    },
    "preserve.service.PreserveServiceImpl.addAssuranceForOrder": {
        "input_parameters": [
            [
                "assuranceType",
                "int"
            ],
            [
                "orderId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "preserve.service.PreserveServiceImpl.queryForStationId": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "preserve.service.PreserveServiceImpl.checkSecurity": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "preserve.service.PreserveServiceImpl.getTripAllDetailInformation": {
        "input_parameters": [
            [
                "gtdi",
                "TripAllDetailInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "preserve.service.PreserveServiceImpl.getContactsById": {
        "input_parameters": [
            [
                "contactsId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Contacts"
        ]
    },
    "preserve.service.PreserveServiceImpl.createOrder": {
        "input_parameters": [
            [
                "coi",
                "Order"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "preserve.service.PreserveServiceImpl.createFoodOrder": {
        "input_parameters": [
            [
                "afi",
                "FoodOrder"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.FoodOrder"
        ]
    },
    "preserve.service.PreserveServiceImpl.createConsign": {
        "input_parameters": [
            [
                "cr",
                "Consign"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Consign"
        ]
    },
    "price.controller.PriceController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "price.controller.PriceController.query": {
        "input_parameters": [
            [
                "ridsAndTts",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "price.controller.PriceController.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "price.controller.PriceController.create": {
        "input_parameters": [
            [
                "info",
                "PriceConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.controller.PriceController.delete": {
        "input_parameters": [
            [
                "pricesId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "price.controller.PriceController.update": {
        "input_parameters": [
            [
                "info",
                "PriceConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.createNewPriceConfig": {
        "input_parameters": [
            [
                "createAndModifyPriceConfig",
                "PriceConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.findById": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "PriceConfig",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.findByRouteIdAndTrainType": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "trainType",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.findByRouteIdsAndTrainTypes": {
        "input_parameters": [
            [
                "ridsAndTts",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.findAllPriceConfig": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.deletePriceConfig": {
        "input_parameters": [
            [
                "pcId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "price.service.PriceServiceImpl.updatePriceConfig": {
        "input_parameters": [
            [
                "c",
                "PriceConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "price.entity.PriceConfig"
        ]
    },
    "rebook.controller.RebookController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "rebook.controller.RebookController.payDifference": {
        "input_parameters": [
            [
                "info",
                "RebookInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "rebook.entity.RebookInfo"
        ]
    },
    "rebook.controller.RebookController.rebook": {
        "input_parameters": [
            [
                "info",
                "RebookInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "rebook.entity.RebookInfo"
        ]
    },
    "rebook.service.RebookServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "rebook.service.RebookServiceImpl.rebook": {
        "input_parameters": [
            [
                "info",
                "RebookInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "rebook.entity.RebookInfo",
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.Order",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "rebook.service.RebookServiceImpl.payDifference": {
        "input_parameters": [
            [
                "info",
                "RebookInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripAllDetail",
            "edu.fudan.common.entity.Order",
            "rebook.entity.RebookInfo"
        ]
    },
    "rebook.service.RebookServiceImpl.updateOrder": {
        "input_parameters": [
            [
                "info",
                "Order"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "rebook.service.RebookServiceImpl.dipatchSeat": {
        "input_parameters": [
            [
                "date",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "startStationId",
                "String"
            ],
            [
                "endStataionId",
                "String"
            ],
            [
                "seatType",
                "int"
            ],
            [
                "tatalNum",
                "int"
            ],
            [
                "stations",
                "List"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Ticket",
        "entity": [
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.Seat"
        ]
    },
    "rebook.service.RebookServiceImpl.tripGD": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "rebook.service.RebookServiceImpl.checkTime": {
        "input_parameters": [
            [
                "travelDate",
                "String"
            ],
            [
                "travelTime",
                "String"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "rebook.service.RebookServiceImpl.getTripAllDetailInformation": {
        "input_parameters": [
            [
                "gtdi",
                "TripAllDetailInfo"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "rebook.service.RebookServiceImpl.createOrder": {
        "input_parameters": [
            [
                "order",
                "Order"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order"
        ]
    },
    "rebook.service.RebookServiceImpl.deleteOrder": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "rebook.service.RebookServiceImpl.getOrderByRebookInfo": {
        "input_parameters": [
            [
                "info",
                "RebookInfo"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Order",
            "rebook.entity.RebookInfo"
        ]
    },
    "rebook.service.RebookServiceImpl.queryTrainTypeByName": {
        "input_parameters": [
            [
                "trainTypeName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "rebook.service.RebookServiceImpl.getRouteByRouteId": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Route",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "rebook.service.RebookServiceImpl.payDifferentMoney": {
        "input_parameters": [
            [
                "orderId",
                "String"
            ],
            [
                "tripId",
                "String"
            ],
            [
                "userId",
                "String"
            ],
            [
                "money",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "edu.fudan.common.entity.PaymentDifferenceInfo"
        ]
    },
    "rebook.service.RebookServiceImpl.drawBackMoney": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "money",
                "String"
            ],
            [
                "httpHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom": {
        "input_parameters": [
            [
                "oldHeaders",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpHeaders",
        "entity": null
    },
    "plan.controller.RoutePlanController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "plan.controller.RoutePlanController.getCheapestRoutes": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo"
        ]
    },
    "plan.controller.RoutePlanController.getQuickestRoutes": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo"
        ]
    },
    "plan.controller.RoutePlanController.getMinStopStations": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo"
        ]
    },
    "plan.service.RoutePlanServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "plan.service.RoutePlanServiceImpl.searchCheapestResult": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.RoutePlanResultUnit",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "plan.service.RoutePlanServiceImpl.searchQuickestResult": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.RoutePlanResultUnit",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "plan.service.RoutePlanServiceImpl.searchMinStopStations": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.Trip",
            "edu.fudan.common.entity.RoutePlanResultUnit",
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripAllDetail"
        ]
    },
    "plan.service.RoutePlanServiceImpl.getRouteByRouteId": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Route",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ArrayList",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ArrayList",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "plan.service.RoutePlanServiceImpl.getStationList": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "route.controller.RouteController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "route.controller.RouteController.createAndModifyRoute": {
        "input_parameters": [
            [
                "createAndModifyRouteInfo",
                "RouteInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": [
            "route.entity.RouteInfo"
        ]
    },
    "route.controller.RouteController.deleteRoute": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "route.controller.RouteController.queryById": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "route.controller.RouteController.queryByIds": {
        "input_parameters": [
            [
                "routeIds",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "route.controller.RouteController.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "route.controller.RouteController.queryByStartAndTerminal": {
        "input_parameters": [
            [
                "start",
                "String"
            ],
            [
                "end",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "route.service.RouteServiceImpl.createAndModify": {
        "input_parameters": [
            [
                "info",
                "RouteInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "route.entity.Route",
            "route.entity.RouteInfo"
        ]
    },
    "route.service.RouteServiceImpl.deleteRoute": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "route.entity.Route"
        ]
    },
    "route.service.RouteServiceImpl.getRouteById": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "route.entity.Route"
        ]
    },
    "route.service.RouteServiceImpl.getRouteByIds": {
        "input_parameters": [
            [
                "routeIds",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "route.entity.Route"
        ]
    },
    "route.service.RouteServiceImpl.getRouteByStartAndEnd": {
        "input_parameters": [
            [
                "startId",
                "String"
            ],
            [
                "terminalId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "route.entity.Route"
        ]
    },
    "route.service.RouteServiceImpl.getAllRoutes": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "route.entity.Route"
        ]
    },
    "seat.controller.SeatController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "seat.controller.SeatController.create": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "seat.controller.SeatController.getLeftTicketOfInterval": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "seat.service.SeatServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "seat.service.SeatServiceImpl.distributeSeat": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.Seat",
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.LeftTicketInfo"
        ]
    },
    "seat.service.SeatServiceImpl.isContained": {
        "input_parameters": [
            [
                "soldTickets",
                "Set"
            ],
            [
                "seat",
                "int"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "edu.fudan.common.entity.Ticket"
        ]
    },
    "seat.service.SeatServiceImpl.getLeftTicketOfInterval": {
        "input_parameters": [
            [
                "seatRequest",
                "Seat"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Ticket",
            "edu.fudan.common.entity.LeftTicketInfo",
            "edu.fudan.common.entity.Seat"
        ]
    },
    "seat.service.SeatServiceImpl.getDirectProportion": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "double",
        "entity": [
            "edu.fudan.common.entity.Config"
        ]
    },
    "security.controller.SecurityController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "security.controller.SecurityController.findAllSecurityConfig": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "security.controller.SecurityController.create": {
        "input_parameters": [
            [
                "info",
                "SecurityConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "security.entity.SecurityConfig"
        ]
    },
    "security.controller.SecurityController.update": {
        "input_parameters": [
            [
                "info",
                "SecurityConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "security.entity.SecurityConfig"
        ]
    },
    "security.controller.SecurityController.delete": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "security.controller.SecurityController.check": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "security.service.SecurityServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "security.service.SecurityServiceImpl.findAllSecurityConfig": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "security.entity.SecurityConfig"
        ]
    },
    "security.service.SecurityServiceImpl.addNewSecurityConfig": {
        "input_parameters": [
            [
                "info",
                "SecurityConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "security.entity.SecurityConfig"
        ]
    },
    "security.service.SecurityServiceImpl.modifySecurityConfig": {
        "input_parameters": [
            [
                "info",
                "SecurityConfig"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "security.entity.SecurityConfig"
        ]
    },
    "security.service.SecurityServiceImpl.deleteSecurityConfig": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "security.entity.SecurityConfig"
        ]
    },
    "security.service.SecurityServiceImpl.check": {
        "input_parameters": [
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.OrderSecurity",
            "security.entity.SecurityConfig"
        ]
    },
    "security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder": {
        "input_parameters": [
            [
                "checkDate",
                "Date"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "OrderSecurity",
        "entity": [
            "edu.fudan.common.entity.OrderSecurity"
        ]
    },
    "security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder": {
        "input_parameters": [
            [
                "checkDate",
                "Date"
            ],
            [
                "accountId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "OrderSecurity",
        "entity": [
            "edu.fudan.common.entity.OrderSecurity"
        ]
    },
    "food.controller.StationFoodController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "food.controller.StationFoodController.getAllFoodStores": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food.controller.StationFoodController.getFoodStoresOfStation": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food.controller.StationFoodController.getFoodStoresByStationNames": {
        "input_parameters": [
            [
                "stationNameList",
                "List"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food.controller.StationFoodController.getFoodListByStationFoodStoreId": {
        "input_parameters": [
            [
                "stationFoodStoreId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "food.service.StationFoodServiceImpl.createFoodStore": {
        "input_parameters": [
            [
                "fs",
                "StationFoodStore"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food.entity.StationFoodStore"
        ]
    },
    "food.service.StationFoodServiceImpl.listFoodStores": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food.entity.StationFoodStore"
        ]
    },
    "food.service.StationFoodServiceImpl.listFoodStoresByStationName": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food.entity.StationFoodStore"
        ]
    },
    "food.service.StationFoodServiceImpl.getFoodStoresByStationNames": {
        "input_parameters": [
            [
                "stationNames",
                "List"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food.entity.StationFoodStore"
        ]
    },
    "food.service.StationFoodServiceImpl.getStaionFoodStoreById": {
        "input_parameters": [
            [
                "id",
                "String"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "food.entity.StationFoodStore"
        ]
    },
    "fdse.microservice.controller.StationController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "fdse.microservice.controller.StationController.query": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.controller.StationController.create": {
        "input_parameters": [
            [
                "station",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.controller.StationController.update": {
        "input_parameters": [
            [
                "station",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.controller.StationController.delete": {
        "input_parameters": [
            [
                "stationsId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "fdse.microservice.controller.StationController.queryForStationId": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.controller.StationController.queryForIdBatch": {
        "input_parameters": [
            [
                "stationNameList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.controller.StationController.queryById": {
        "input_parameters": [
            [
                "stationId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.controller.StationController.queryForNameBatch": {
        "input_parameters": [
            [
                "stationIdList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "fdse.microservice.service.StationServiceImpl.create": {
        "input_parameters": [
            [
                "station",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.exist": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "fdse.microservice.service.StationServiceImpl.update": {
        "input_parameters": [
            [
                "info",
                "Station"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.delete": {
        "input_parameters": [
            [
                "stationsId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.query": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.queryForId": {
        "input_parameters": [
            [
                "stationName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.queryForIdBatch": {
        "input_parameters": [
            [
                "nameList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.queryById": {
        "input_parameters": [
            [
                "stationId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "fdse.microservice.service.StationServiceImpl.queryByIdBatch": {
        "input_parameters": [
            [
                "idList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "fdse.microservice.entity.Station"
        ]
    },
    "trainFood.controller.TrainFoodController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "trainFood.controller.TrainFoodController.getAllTrainFood": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "trainFood.controller.TrainFoodController.getTrainFoodOfTrip": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "trainFood.service.TrainFoodServiceImpl.createTrainFood": {
        "input_parameters": [
            [
                "tf",
                "TrainFood"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainFood",
        "entity": [
            "trainFood.entity.TrainFood"
        ]
    },
    "trainFood.service.TrainFoodServiceImpl.listTrainFood": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "trainFood.entity.TrainFood"
        ]
    },
    "trainFood.service.TrainFoodServiceImpl.listTrainFoodByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "trainFood.entity.TrainFood"
        ]
    },
    "train.controller.TrainController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "train.controller.TrainController.create": {
        "input_parameters": [
            [
                "trainType",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.controller.TrainController.retrieve": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.controller.TrainController.retrieveByName": {
        "input_parameters": [
            [
                "names",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.controller.TrainController.update": {
        "input_parameters": [
            [
                "trainType",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.controller.TrainController.delete": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "train.controller.TrainController.query": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.service.TrainServiceImpl.create": {
        "input_parameters": [
            [
                "trainType",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.service.TrainServiceImpl.retrieve": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.service.TrainServiceImpl.retrieveByName": {
        "input_parameters": [
            [
                "name",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.service.TrainServiceImpl.retrieveByNames": {
        "input_parameters": [
            [
                "names",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.service.TrainServiceImpl.update": {
        "input_parameters": [
            [
                "trainType",
                "TrainType"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": [
            "train.entity.TrainType"
        ]
    },
    "train.service.TrainServiceImpl.delete": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "train.service.TrainServiceImpl.query": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": null
    },
    "travelplan.controller.TravelPlanController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "travelplan.controller.TravelPlanController.getTransferResult": {
        "input_parameters": [
            [
                "info",
                "TransferTravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "travelplan.entity.TransferTravelInfo"
        ]
    },
    "travelplan.controller.TravelPlanController.getByCheapest": {
        "input_parameters": [
            [
                "queryInfo",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travelplan.controller.TravelPlanController.getByQuickest": {
        "input_parameters": [
            [
                "queryInfo",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travelplan.controller.TravelPlanController.getByMinStation": {
        "input_parameters": [
            [
                "queryInfo",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "travelplan.service.TravelPlanServiceImpl.getTransferSearch": {
        "input_parameters": [
            [
                "info",
                "TransferTravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travelplan.entity.TransferTravelInfo",
            "travelplan.entity.TransferTravelResult",
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getCheapest": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.RoutePlanResultUnit",
            "edu.fudan.common.entity.TripInfo",
            "travelplan.entity.TravelAdvanceResultUnit"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getQuickest": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.RoutePlanResultUnit",
            "edu.fudan.common.entity.TripInfo",
            "travelplan.entity.TravelAdvanceResultUnit"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getMinStation": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.RoutePlanResultUnit",
            "edu.fudan.common.entity.TripInfo",
            "travelplan.entity.TravelAdvanceResultUnit"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getRestTicketNumber": {
        "input_parameters": [
            [
                "travelDate",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "startStationName",
                "String"
            ],
            [
                "endStationName",
                "String"
            ],
            [
                "seatType",
                "int"
            ],
            [
                "totalNum",
                "int"
            ],
            [
                "stations",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "int",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ArrayList",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.RoutePlanResultUnit"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ArrayList",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.RoutePlanResultUnit"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation": {
        "input_parameters": [
            [
                "info",
                "RoutePlanInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ArrayList",
        "entity": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "edu.fudan.common.entity.RoutePlanResultUnit"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.tripsFromNormal": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ArrayList",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName": {
        "input_parameters": [
            [
                "trainTypeName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "travel.controller.TravelController.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "travel.controller.TravelController.getTrainTypeByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.controller.TravelController.getRouteByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.controller.TravelController.getTripsByRouteId": {
        "input_parameters": [
            [
                "routeIds",
                "ArrayList"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.controller.TravelController.createTrip": {
        "input_parameters": [
            [
                "routeIds",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "travel.controller.TravelController.retrieve": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.controller.TravelController.updateTrip": {
        "input_parameters": [
            [
                "info",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TravelInfo"
        ]
    },
    "travel.controller.TravelController.deleteTrip": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.controller.TravelController.queryInfo": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel.controller.TravelController.queryInfoInparallel": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel.controller.TravelController.getTripAllDetailInfo": {
        "input_parameters": [
            [
                "gtdi",
                "TripAllDetailInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripAllDetailInfo"
        ]
    },
    "travel.controller.TravelController.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.controller.TravelController.adminQueryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel.service.TravelServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "travel.service.TravelServiceImpl.create": {
        "input_parameters": [
            [
                "info",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelInfo",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel.service.TravelServiceImpl.getRouteByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Route",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel.service.TravelServiceImpl.getTrainTypeByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TrainType",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel.service.TravelServiceImpl.getTripByRoute": {
        "input_parameters": [
            [
                "routeIds",
                "ArrayList"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel.entity.Trip"
        ]
    },
    "travel.service.TravelServiceImpl.retrieve": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel.service.TravelServiceImpl.update": {
        "input_parameters": [
            [
                "info",
                "TravelInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TravelInfo",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel.service.TravelServiceImpl.delete": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel.service.TravelServiceImpl.query": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel.service.TravelServiceImpl.queryByBatch": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel.service.TravelServiceImpl.call": {
        "input_parameters": [],
        "return_type": "TripResponse",
        "entity": [
            "edu.fudan.common.entity.TripResponse"
        ]
    },
    "travel.service.TravelServiceImpl.queryInParallel": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel.service.TravelServiceImpl.getTripAllDetailInfo": {
        "input_parameters": [
            [
                "gtdi",
                "TripAllDetailInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel.entity.TripAllDetail",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TripId",
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripResponse"
        ]
    },
    "travel.service.TravelServiceImpl.getTicketsByBatch": {
        "input_parameters": [
            [
                "trips",
                "List"
            ],
            [
                "startPlaceName",
                "String"
            ],
            [
                "endPlaceName",
                "String"
            ],
            [
                "departureTime",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "travel.entity.Travel",
            "edu.fudan.common.entity.TripResponse",
            "travel.entity.Trip"
        ]
    },
    "travel.service.TravelServiceImpl.getTickets": {
        "input_parameters": [
            [
                "trip",
                "Trip"
            ],
            [
                "route1",
                "Route"
            ],
            [
                "startPlaceName",
                "String"
            ],
            [
                "endPlaceName",
                "String"
            ],
            [
                "departureTime",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TripResponse",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "travel.entity.Trip",
            "travel.entity.Travel",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.TripResponse"
        ]
    },
    "travel.service.TravelServiceImpl.setResponse": {
        "input_parameters": [
            [
                "trip",
                "Trip"
            ],
            [
                "tr",
                "TravelResult"
            ],
            [
                "startPlaceName",
                "String"
            ],
            [
                "endPlaceName",
                "String"
            ],
            [
                "departureTime",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TripResponse",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "travel.entity.Trip",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.TripResponse"
        ]
    },
    "travel.service.TravelServiceImpl.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel.entity.Trip"
        ]
    },
    "travel.service.TravelServiceImpl.afterToday": {
        "input_parameters": [
            [
                "date",
                "String"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "travel.service.TravelServiceImpl.getTrainTypeByName": {
        "input_parameters": [
            [
                "trainTypeName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "travel.service.TravelServiceImpl.getRouteByRouteId": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Route",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "travel.service.TravelServiceImpl.getRestTicketNumber": {
        "input_parameters": [
            [
                "travelDate",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "startStationName",
                "String"
            ],
            [
                "endStationName",
                "String"
            ],
            [
                "seatType",
                "int"
            ],
            [
                "totalNum",
                "int"
            ],
            [
                "stationList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "int",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "travel.service.TravelServiceImpl.adminQueryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel.entity.AdminTrip",
            "travel.entity.Trip"
        ]
    },
    "travel2.controller.Travel2Controller.home": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "travel2.controller.Travel2Controller.getTrainTypeByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.getRouteByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.getTripsByRouteId": {
        "input_parameters": [
            [
                "routeIds",
                "ArrayList"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.createTrip": {
        "input_parameters": [
            [
                "routeIds",
                "edu"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.retrieve": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.updateTrip": {
        "input_parameters": [
            [
                "info",
                "edu"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.deleteTrip": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.queryInfo": {
        "input_parameters": [
            [
                "info",
                "edu"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "edu.fudan.common.entity.TripResponse"
        ]
    },
    "travel2.controller.Travel2Controller.getTripAllDetailInfo": {
        "input_parameters": [
            [
                "gtdi",
                "edu"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.controller.Travel2Controller.adminQueryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "travel2.service.TravelServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "travel2.service.TravelServiceImpl.getRouteByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.Route",
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel2.service.TravelServiceImpl.getTrainTypeByTripId": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TrainType",
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel2.service.TravelServiceImpl.getTripByRoute": {
        "input_parameters": [
            [
                "routeIds",
                "ArrayList"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel2.entity.Trip"
        ]
    },
    "travel2.service.TravelServiceImpl.create": {
        "input_parameters": [
            [
                "info",
                "edu"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel2.service.TravelServiceImpl.retrieve": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel2.service.TravelServiceImpl.update": {
        "input_parameters": [
            [
                "info",
                "edu"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel2.service.TravelServiceImpl.delete": {
        "input_parameters": [
            [
                "tripId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripId"
        ]
    },
    "travel2.service.TravelServiceImpl.queryByBatch": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel2.service.TravelServiceImpl.query": {
        "input_parameters": [
            [
                "info",
                "TripInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripResponse",
            "travel2.entity.Trip",
            "edu.fudan.common.entity.TripInfo"
        ]
    },
    "travel2.service.TravelServiceImpl.getTripAllDetailInfo": {
        "input_parameters": [
            [
                "gtdi",
                "TripAllDetailInfo"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "edu.fudan.common.entity.TripId",
            "edu.fudan.common.entity.TripAllDetailInfo",
            "edu.fudan.common.entity.TripResponse",
            "travel2.entity.TripAllDetail",
            "travel2.entity.Trip"
        ]
    },
    "travel2.service.TravelServiceImpl.getTicketsByBatch": {
        "input_parameters": [
            [
                "trips",
                "List"
            ],
            [
                "startPlaceName",
                "String"
            ],
            [
                "endPlaceName",
                "String"
            ],
            [
                "departureTime",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "List",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "edu.fudan.common.entity.TripResponse",
            "travel2.entity.Travel",
            "travel2.entity.Trip"
        ]
    },
    "travel2.service.TravelServiceImpl.getTickets": {
        "input_parameters": [
            [
                "trip",
                "Trip"
            ],
            [
                "route1",
                "Route"
            ],
            [
                "startPlaceName",
                "String"
            ],
            [
                "endPlaceName",
                "String"
            ],
            [
                "departureTime",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TripResponse",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "travel2.entity.Travel",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.TripResponse",
            "travel2.entity.Trip"
        ]
    },
    "travel2.service.TravelServiceImpl.setResponse": {
        "input_parameters": [
            [
                "trip",
                "Trip"
            ],
            [
                "tr",
                "TravelResult"
            ],
            [
                "startPlaceName",
                "String"
            ],
            [
                "endPlaceName",
                "String"
            ],
            [
                "departureTime",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TripResponse",
        "entity": [
            "edu.fudan.common.entity.TravelResult",
            "edu.fudan.common.entity.TrainType",
            "edu.fudan.common.entity.Route",
            "edu.fudan.common.entity.TripResponse",
            "travel2.entity.Trip"
        ]
    },
    "travel2.service.TravelServiceImpl.queryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel2.entity.Trip"
        ]
    },
    "travel2.service.TravelServiceImpl.afterToday": {
        "input_parameters": [
            [
                "date",
                "String"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "travel2.service.TravelServiceImpl.getTrainTypeByName": {
        "input_parameters": [
            [
                "trainTypeName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "TrainType",
        "entity": [
            "edu.fudan.common.entity.TrainType"
        ]
    },
    "travel2.service.TravelServiceImpl.getRouteByRouteId": {
        "input_parameters": [
            [
                "routeId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Route",
        "entity": [
            "edu.fudan.common.entity.Route"
        ]
    },
    "travel2.service.TravelServiceImpl.getRestTicketNumber": {
        "input_parameters": [
            [
                "travelDate",
                "String"
            ],
            [
                "trainNumber",
                "String"
            ],
            [
                "startStationName",
                "String"
            ],
            [
                "endStationName",
                "String"
            ],
            [
                "seatType",
                "int"
            ],
            [
                "totalNum",
                "int"
            ],
            [
                "stationList",
                "List"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "int",
        "entity": [
            "edu.fudan.common.entity.Seat"
        ]
    },
    "travel2.service.TravelServiceImpl.adminQueryAll": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "travel2.entity.AdminTrip",
            "travel2.entity.Trip"
        ]
    },
    "user.controller.UserController.testHello": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "user.controller.UserController.getAllUser": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "user.controller.UserController.getUserByUserName": {
        "input_parameters": [
            [
                "userName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "user.controller.UserController.getUserByUserId": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "user.controller.UserController.registerUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "user.controller.UserController.deleteUserById": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "user.controller.UserController.updateUser": {
        "input_parameters": [
            [
                "user",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "ResponseEntity",
        "entity": null
    },
    "user.service.impl.UserServiceImpl.getServiceUrl": {
        "input_parameters": [
            [
                "serviceName",
                "String"
            ]
        ],
        "return_type": "String",
        "entity": null
    },
    "user.service.impl.UserServiceImpl.saveUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "user.entity.User"
        ]
    },
    "user.service.impl.UserServiceImpl.createDefaultAuthUser": {
        "input_parameters": [
            [
                "dto",
                "AuthDto"
            ]
        ],
        "return_type": "Response",
        "entity": null
    },
    "user.service.impl.UserServiceImpl.getAllUsers": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "user.entity.User"
        ]
    },
    "user.service.impl.UserServiceImpl.findByUserName": {
        "input_parameters": [
            [
                "userName",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "user.entity.User"
        ]
    },
    "user.service.impl.UserServiceImpl.findByUserId": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "user.entity.User"
        ]
    },
    "user.service.impl.UserServiceImpl.deleteUser": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "user.entity.User"
        ]
    },
    "user.service.impl.UserServiceImpl.updateUser": {
        "input_parameters": [
            [
                "userDto",
                "UserDto"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "user.entity.User"
        ]
    },
    "user.service.impl.UserServiceImpl.deleteUserAuth": {
        "input_parameters": [
            [
                "userId",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "void",
        "entity": null
    },
    "verifycode.controller.VerifyCodeController.imageCode": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ],
            [
                "request",
                "HttpServletRequest"
            ],
            [
                "response",
                "HttpServletResponse"
            ]
        ],
        "return_type": "void",
        "entity": null
    },
    "verifycode.controller.VerifyCodeController.verifyCode": {
        "input_parameters": [
            [
                "verifyCode",
                "String"
            ],
            [
                "request",
                "HttpServletRequest"
            ],
            [
                "response",
                "HttpServletResponse"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "verifycode.service.impl.VerifyCodeServiceImpl.getImageCode": {
        "input_parameters": [
            [
                "width",
                "int"
            ],
            [
                "height",
                "int"
            ],
            [
                "os",
                "OutputStream"
            ],
            [
                "request",
                "HttpServletRequest"
            ],
            [
                "response",
                "HttpServletResponse"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Map",
        "entity": null
    },
    "verifycode.service.impl.VerifyCodeServiceImpl.verifyCode": {
        "input_parameters": [
            [
                "request",
                "HttpServletRequest"
            ],
            [
                "response",
                "HttpServletResponse"
            ],
            [
                "receivedCode",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "boolean",
        "entity": null
    },
    "verifycode.service.impl.VerifyCodeServiceImpl.getRandColor": {
        "input_parameters": [
            [
                "fc",
                "int"
            ],
            [
                "bc",
                "int"
            ]
        ],
        "return_type": "Color",
        "entity": null
    },
    "waitorder.controller.WaitListOrderController.home": {
        "input_parameters": [],
        "return_type": "String",
        "entity": null
    },
    "waitorder.controller.WaitListOrderController.createNewOrder": {
        "input_parameters": [
            [
                "createOrder",
                "WaitListOrderVO"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": [
            "waitorder.entity.WaitListOrderVO"
        ]
    },
    "waitorder.controller.WaitListOrderController.getAllOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "waitorder.controller.WaitListOrderController.getWaitListOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "HttpEntity",
        "entity": null
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.findOrderById": {
        "input_parameters": [
            [
                "id",
                "String"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.create": {
        "input_parameters": [
            [
                "orderVO",
                "WaitListOrderVO"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrderVO",
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.getAllOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.getAllWaitListOrders": {
        "input_parameters": [
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.updateOrder": {
        "input_parameters": [
            [
                "order",
                "WaitListOrder"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.modifyWaitListOrderStatus": {
        "input_parameters": [
            [
                "status",
                "int"
            ],
            [
                "orderId",
                "String"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.saveNewOrder": {
        "input_parameters": [
            [
                "orderVO",
                "WaitListOrderVO"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrderVO",
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.WaitListOrderExist": {
        "input_parameters": [
            [
                "orderList",
                "List"
            ],
            [
                "newOrder",
                "WaitListOrderVO"
            ]
        ],
        "return_type": "Boolean",
        "entity": [
            "waitorder.entity.WaitListOrderVO",
            "waitorder.entity.WaitListOrder"
        ]
    },
    "waitorder.service.Impl.WaitListOrderServiceImpl.triggerThread": {
        "input_parameters": [
            [
                "orderPO",
                "WaitListOrder"
            ],
            [
                "orderVO",
                "WaitListOrderVO"
            ],
            [
                "headers",
                "HttpHeaders"
            ]
        ],
        "return_type": "Response",
        "entity": [
            "waitorder.entity.WaitListOrderVO",
            "waitorder.entity.WaitListOrder"
        ]
    }
}